{"ast":null,"code":"import axios from \"axios\";\nimport { createMovieFailure, createMovieStart, createMovieSuccess, deleteMovieFailure, deleteMovieStart, deleteMovieSuccess, getMoviesFailure, getMoviesStart, getMoviesSuccess, updateMovieFailure, updateMovieStart, updateMovieSuccess } from \"./MovieActions\";\nexport const getMovies = async dispatch => {\n  dispatch(getMoviesStart());\n  try {\n    const res = await axios.get(\"/movies\", {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    });\n    dispatch(getMoviesSuccess(res.data));\n  } catch (err) {\n    dispatch(getMoviesFailure());\n  }\n};\n\n//CREATE\nexport const createMovie = async (movie, dispatch) => {\n  dispatch(createMovieStart());\n  try {\n    const res = await axios.post(\"/movies\", movie, {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    });\n    dispatch(createMovieSuccess(res.data));\n  } catch (err) {\n    dispatch(createMovieFailure());\n  }\n};\nexport const updateMovie = async (id, dispatch) => {\n  dispatch(updateMovieStart());\n  try {\n    await axios.put(\"/movies/\" + id, {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    });\n    dispatch(updateMovieSuccess(id));\n  } catch (err) {\n    dispatch(updateMovieFailure());\n  }\n};\nexport const deleteMovie = async (id, dispatch) => {\n  dispatch(deleteMovieStart());\n  try {\n    await axios.delete(\"/movies/\" + id, {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    });\n    dispatch(deleteMovieSuccess(id));\n  } catch (err) {\n    dispatch(deleteMovieFailure());\n  }\n};","map":{"version":3,"names":["axios","createMovieFailure","createMovieStart","createMovieSuccess","deleteMovieFailure","deleteMovieStart","deleteMovieSuccess","getMoviesFailure","getMoviesStart","getMoviesSuccess","updateMovieFailure","updateMovieStart","updateMovieSuccess","getMovies","dispatch","res","get","headers","token","JSON","parse","localStorage","getItem","accessToken","data","err","createMovie","movie","post","updateMovie","id","put","deleteMovie","delete"],"sources":["D:/netflix/admin1/src/context/movieContext/apiCalls.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  createMovieFailure,\r\n  createMovieStart,\r\n  createMovieSuccess,\r\n  deleteMovieFailure,\r\n  deleteMovieStart,\r\n  deleteMovieSuccess,\r\n  getMoviesFailure,\r\n  getMoviesStart,\r\n  getMoviesSuccess,\r\n  updateMovieFailure,\r\n  updateMovieStart,\r\n  updateMovieSuccess,\r\n} from \"./MovieActions\";\r\n\r\nexport const getMovies = async (dispatch) => {\r\n  dispatch(getMoviesStart());\r\n  try {\r\n    const res = await axios.get(\"/movies\", {\r\n      headers: {\r\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n      },\r\n    });\r\n    dispatch(getMoviesSuccess(res.data));\r\n  } catch (err) {\r\n    dispatch(getMoviesFailure());\r\n  }\r\n};\r\n\r\n//CREATE\r\nexport const createMovie = async (movie, dispatch) => {\r\n  dispatch(createMovieStart());\r\n  try {\r\n    const res = await axios.post(\"/movies\", movie, {\r\n      headers: {\r\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n      },\r\n    });\r\n    dispatch(createMovieSuccess(res.data));\r\n  } catch (err) {\r\n    dispatch(createMovieFailure());\r\n  }\r\n};\r\n\r\nexport const updateMovie = async (id, dispatch) => {\r\n  dispatch(updateMovieStart());\r\n  try {\r\n      await axios.put(\"/movies/\" + id, {\r\n      headers: {\r\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n      },\r\n    });\r\n    dispatch(updateMovieSuccess(id));\r\n  } catch (err) {\r\n    dispatch(updateMovieFailure());\r\n  }\r\n};\r\n\r\nexport const deleteMovie = async (id, dispatch) => {\r\n  dispatch(deleteMovieStart());\r\n  try {\r\n    await axios.delete(\"/movies/\" + id, {\r\n      headers: {\r\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n      },\r\n    });\r\n    dispatch(deleteMovieSuccess(id));\r\n  } catch (err) {\r\n    dispatch(deleteMovieFailure());\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,kBAAkB,EAClBC,gBAAgB,EAChBC,kBAAkB,EAClBC,kBAAkB,EAClBC,gBAAgB,EAChBC,kBAAkB,EAClBC,gBAAgB,EAChBC,cAAc,EACdC,gBAAgB,EAChBC,kBAAkB,EAClBC,gBAAgB,EAChBC,kBAAkB,QACb,gBAAgB;AAEvB,OAAO,MAAMC,SAAS,GAAG,MAAOC,QAAQ,IAAK;EAC3CA,QAAQ,CAACN,cAAc,EAAE,CAAC;EAC1B,IAAI;IACF,MAAMO,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,SAAS,EAAE;MACrCC,OAAO,EAAE;QACPC,KAAK,EAAE,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACC;MAC9D;IACF,CAAC,CAAC;IACFT,QAAQ,CAACL,gBAAgB,CAACM,GAAG,CAACS,IAAI,CAAC,CAAC;EACtC,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZX,QAAQ,CAACP,gBAAgB,EAAE,CAAC;EAC9B;AACF,CAAC;;AAED;AACA,OAAO,MAAMmB,WAAW,GAAG,OAAOC,KAAK,EAAEb,QAAQ,KAAK;EACpDA,QAAQ,CAACZ,gBAAgB,EAAE,CAAC;EAC5B,IAAI;IACF,MAAMa,GAAG,GAAG,MAAMf,KAAK,CAAC4B,IAAI,CAAC,SAAS,EAAED,KAAK,EAAE;MAC7CV,OAAO,EAAE;QACPC,KAAK,EAAE,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACC;MAC9D;IACF,CAAC,CAAC;IACFT,QAAQ,CAACX,kBAAkB,CAACY,GAAG,CAACS,IAAI,CAAC,CAAC;EACxC,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZX,QAAQ,CAACb,kBAAkB,EAAE,CAAC;EAChC;AACF,CAAC;AAED,OAAO,MAAM4B,WAAW,GAAG,OAAOC,EAAE,EAAEhB,QAAQ,KAAK;EACjDA,QAAQ,CAACH,gBAAgB,EAAE,CAAC;EAC5B,IAAI;IACA,MAAMX,KAAK,CAAC+B,GAAG,CAAC,UAAU,GAAGD,EAAE,EAAE;MACjCb,OAAO,EAAE;QACPC,KAAK,EAAE,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACC;MAC9D;IACF,CAAC,CAAC;IACFT,QAAQ,CAACF,kBAAkB,CAACkB,EAAE,CAAC,CAAC;EAClC,CAAC,CAAC,OAAOL,GAAG,EAAE;IACZX,QAAQ,CAACJ,kBAAkB,EAAE,CAAC;EAChC;AACF,CAAC;AAED,OAAO,MAAMsB,WAAW,GAAG,OAAOF,EAAE,EAAEhB,QAAQ,KAAK;EACjDA,QAAQ,CAACT,gBAAgB,EAAE,CAAC;EAC5B,IAAI;IACF,MAAML,KAAK,CAACiC,MAAM,CAAC,UAAU,GAAGH,EAAE,EAAE;MAClCb,OAAO,EAAE;QACPC,KAAK,EAAE,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACC;MAC9D;IACF,CAAC,CAAC;IACFT,QAAQ,CAACR,kBAAkB,CAACwB,EAAE,CAAC,CAAC;EAClC,CAAC,CAAC,OAAOL,GAAG,EAAE;IACZX,QAAQ,CAACV,kBAAkB,EAAE,CAAC;EAChC;AACF,CAAC"},"metadata":{},"sourceType":"module"}